<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on EP2P | Kademlia API</title><link>https://ep2p.github.io/kademlia-api/docs/</link><description>Recent content in Docs on EP2P | Kademlia API</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ep2p.github.io/kademlia-api/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Abstraction</title><link>https://ep2p.github.io/kademlia-api/docs/usage/abstraction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ep2p.github.io/kademlia-api/docs/usage/abstraction/</guid><description>Abstraction # In this section, we go through the abstraction layer and what needs to be implemented in order for this API to work.
Node ID # You should make a decision about size of your node IDs. This API supports Integer, Long and BigInteger by default. How a node ID is chosen can completely be different per use case. For example, this article suggests why it&amp;rsquo;s a good idea to have the hash of your node&amp;rsquo;s public key as your Node ID.</description></item><item><title>Kademlia Node Usage</title><link>https://ep2p.github.io/kademlia-api/docs/usage/kademlia-usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ep2p.github.io/kademlia-api/docs/usage/kademlia-usage/</guid><description>Kademlia Node Usage # In this section, we see how to create your Kademlia Nodes. Make sure you have read abstraction layer first.
Introduction # This library has 2 Kademlia related interfaces.
KademliaNodeAPI: Main implementation is KademliaNode class. It only handles bootstrapping the network and keeping it alive. KademliaDHTNodeAPI: Extends KademliaNodeAPI interface. Main implementation is KademliaDHTNode which decorates any KademliaNodeAPI. Therefore, to create KademliaDHTNode you first need an instance of KademliaNodeAPI (KademliaNode).</description></item></channel></rss>